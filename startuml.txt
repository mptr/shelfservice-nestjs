@startuml
skinparam linetype ortho
skinparam nodesep 89
skinparam ranksep 57

class User {
id: string
email: string
preferred_username: string
given_name: string
family_name: string
User(jwt: JsonWebToken)
}

' #### DEFINITIONS ####
abstract class WorkflowDefinition<S = Service> {
kind: string
name: string
description: string
icon: string
abstract runs: WorkflowRun[]

~parameterFields: Parameter[]
.. auto generated ..
id: string;
createdAt: Date
updatedAt: Date
deletedAt: Date
.. derived ..
hasParams: boolean
sanitizedName: string

---

{abstract} run(u: User, parameters: SetParameter[], svc: S): WorkflowRun
}
WorkflowDefinition "owners" -right-- "workflows" User : < owns

class KubernetesWorkflowDefinition<K8sJobService> extends WorkflowDefinition {
image: string
command: string[]
}

class WebWorkerWorkflowDefinition<never> extends WorkflowDefinition {
script: string
}

' #### RUNS ####
abstract class WorkflowRun {
id: string
startedAt: Date
finishedAt: Date
result: boolean
{abstract} workflowDefinition: WorkflowDefinition
.. derived ..
jobTag: string
status: JobStatus
__
WorkflowRun(wfDef: WorkflowDefinition, u: User, parameters: SetParameter[])
{abstract} start()
{abstract} streamLog(): LogStreamer
archive(result: boolean, logs: string)
}
WorkflowRun "workflowRuns *" -up-- "ranBy" User : < triggers

class KubernetesWorkflowRun {
start(jobService: K8sJobService)
streamLog(svc: K8sJobService): LogStreamer
}
KubernetesWorkflowRun --|> WorkflowRun
KubernetesWorkflowRun "runs *" -up- "workflowDefinition" KubernetesWorkflowDefinition : < defines

class WebWorkerWorkflowRun {
start()
streamLog(): LogStreamer
}
WebWorkerWorkflowRun --|> WorkflowRun
WebWorkerWorkflowRun "runs *" -up- "workflowDefinition" WebWorkerWorkflowDefinition : < defines

' #### LOG ####
class WorkflowRunLog {
id: number
data: string
}
WorkflowRun "log" - "0..1" WorkflowRunLog

' #### PARAM ####
class Parameter {
  {abstract} kind: ParameterType
  name: string
  description: string
  displayName: string
  acceptConditions: Validator[]
  accept(from: Record): SetParameter
}
WorkflowDefinition --> "parameterFields *" Parameter

class RequireableParameter {
  required: boolean
  hint: string
}
RequireableParameter -left-|> Parameter

class BooleanParameter {}
BooleanParameter -up-|> Parameter

class StringParameter extends RequireableParameter{
  exampleValue: string
  pattern: string
  multiline: boolean
}
class SelectParameter extends RequireableParameter{
  options: string[]
}
class NumberParameter extends RequireableParameter{
  min: number
  max: number
  step: number
}
class DateParameter extends RequireableParameter{
  min: Date
  max: Date
}

class SetParameter {
  value: string
}
SetParameter -up-|> Parameter
WorkflowRun -left-> "  parameters *" SetParameter

enum JobStatus {
  prepared
  running
  success
  failure
}

enum ParameterType {
  string
  select
  number
  boolean
  date
}

ParameterType -right[hidden]- WorkflowDefinition
JobStatus -down[hidden]- WorkflowRunLog



@enduml